!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define("Instantly",[],e):"object"==typeof exports?exports.Instantly=e():t.Instantly=e()}(this,function(){return function(t){function e(n){if(i[n])return i[n].exports;var r=i[n]={exports:{},id:n,loaded:!1};return t[n].call(r.exports,r,r.exports,e),r.loaded=!0,r.exports}var i={};return e.m=t,e.c=i,e.p="",e(0)}([function(t,e,i){t.exports=i(3)},function(t,e){function i(t){return n(t)&&s.call(t)==r}function n(t){var e=typeof t;return!!t&&("object"==e||"function"==e)}var r="[object Function]",o=Object.prototype,s=o.toString;t.exports=i},function(t,e){function i(t){return!!t&&"object"==typeof t}function n(t){return"string"==typeof t||i(t)&&s.call(t)==r}var r="[object String]",o=Object.prototype,s=o.toString;t.exports=n},function(t,e,i){"use strict";function n(t,e){if(!t)throw new TypeError("You need to provide a channel we can listen to!");if(this.channel=t,!window.EventSource)throw new Error("EventSource is not defined in the window object. Use a polyfill.");e&&e.retries?this.retries=e.retries:this.retries=5,e&&e.timeout?this.timeout=e.timeout:this.timeout=15e3,e&&o(e.error)&&(this.errorHandler=e.error),this.initialized=!1,this.callbacks={}}var r=i(2),o=i(1);n.prototype={internalRetry:0,on:function(t,e){if(!o(e))throw new TypeError("Callback is not a function");if(!r(t))throw new TypeError("Event is not a string");this.callbacks[t]=e},listen:function(){this.es=new EventSource(this.channel),this.es.addEventListener("open",this.open.bind(this)),this.es.addEventListener("error",this.error.bind(this));for(var t in this.callbacks){if(!this.callbacks.hasOwnProperty(t))return;this.es.addEventListener(t,this.callbacks[t])}},retry:function(){this.initialized||this.internalRetry===this.retries||setTimeout(function(){this.listen(),this.internalRetry++}.bind(this),this.timeout)},open:function(){this.initialized=!0,this.internalRetry=0},close:function(){this.es.close(),this.initialized=!1},error:function(){this.close(),this.retry(),this.errorHandler&&this.errorHandler.call(this)}},t.exports=n}])});